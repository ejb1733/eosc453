{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# A little experience solving linear and nonlinear IVPs with a 4th order Runge-Kutta Method"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This Jupyter notebook is designed to help you learn a little moe about the numerical solution of initial value problems (ODEs).  The 4th order Runge-Kutta is quite an upgrade from the 1st order Euler method you tried before.  The formula provides an accuracy equivalent to a 4th order Taylor series approximation to derivatives. See the notes on the Numerical Solution of Differential Equations on the website for more.\n",
    "\n",
    "The algorithm is as follows:\n",
    "\n",
    "1. Define Equation(s) to be solved. This will be a 1st order ODE or system of ODEs. \n",
    "2. Define or input appropriate control parameters (such as the length of time for the integration and the tolerance for convergence).\n",
    "3. Define the vector of initial conditions -- value(s) of the function at time = 0\n",
    "4. Call the ODE solver\n",
    "5. Plot your results\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Define some global variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "global a, b\n",
    "\n",
    "a = -1 #a constant\n",
    "b = 1.2 #a power law exponent; b=1 implies a linear system with (here) an exponential solution\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A global variable can be passed to all called functions; 'a' and 'b' are constants in the ODE in the function 'oneode.ipynb': $dy/dt = -a*y^b$.  Be careful using global variables generally. \n",
    "\n",
    "NOTE: if $b = 1$ then this ode is linear and the analytical solution can be obtained by separation of variables (this is raddioactive decay): $y(t) =\\exp(-at)$ \n",
    "\n",
    "The larger or smaller $b$ is compared to 1, the more nonlinear are the equations to be solved.  In the coupled ode example the nonlinear coupling has a large effect-- Increase or decrease $b$ from 1 with small steps and explore the behavior; You may have to increase the number of time steps below to achieve resolution.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Define functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Define a function for the 4th order Runge-Kutta integration method and the ODEs to be solved. \n",
    "\n",
    "def rk4(fxy, x0, xf, y0, N):\n",
    "    \n",
    "    # The inputs to the function are:\n",
    "    #         fxy = the name of the function containing f(x,y) (e.g. oneode, twoode)\n",
    "    #         xo,xf = initial and final values of the independent variable (integers or floats)\n",
    "    #         yo = initial value of dependent variable at xo (numpy array)\n",
    "    #         N = number of intervals to use between xo and xf (integer)\n",
    "\n",
    "    # The outputs to the function are:\n",
    "    #         X = numpy array containing values of the independent variable\n",
    "    #         Y = the estimated dependent variable at each value of the independent variable\n",
    "    #         --> this variable is a 1D numpy array if only one equation is solved\n",
    "    #         --> it is an M-D numpy array [y1(x) y2(x) ... ] for multiple (M) equations \n",
    "\n",
    "    #compute step size and size of output variables\n",
    "    if N < 2:\n",
    "        N = 2 #set minimum number for N\n",
    "    h = (xf - x0) / N\n",
    "    X = np.zeros((N+1, 1))\n",
    "    M = np.max(np.shape(y0))\n",
    "    Y = np.zeros((N+1, M))*1j #make complex by multiplying by 1j; this way can add complex values to this during integration\n",
    "\n",
    "    #set initial conditions\n",
    "    x = x0\n",
    "    X[0] = x\n",
    "    y = [complex(val) for val in y0]  #make complex\n",
    "    Y[0,:] = y\n",
    "    \n",
    "    #begin computational loop\n",
    "    for ii in range(N):\n",
    "        \n",
    "        k1 = np.array([h * val for val in fxy(x,y)]) #evaluate function fxy; depending on equation, k1-4 can be complex; this is why we make Y and y complex as well\n",
    "        k2 = np.array([h * val for val in fxy(x+h/2, y+k1/2)])\n",
    "        k3 = np.array([h * val for val in fxy(x+h/2, y+k2/2)])\n",
    "        k4 = np.array([h * val for val in fxy(x+h, y+k3)])\n",
    "        \n",
    "        y += (k1 + 2*k2 + 2*k3 + k4) / 6.\n",
    "        x += h\n",
    "        X[ii+1] = x\n",
    "        Y[ii+1,:] = y\n",
    "    \n",
    "    return X, Y\n",
    "\n",
    "def oneode(t,y):\n",
    "    \n",
    "    # input:\n",
    "    #     t: float\n",
    "    #     y: numpy array with one value\n",
    "\n",
    "    # output:\n",
    "    #     ydot: numpy array of same size as y\n",
    "    \n",
    "    global a, b #we are bringing a defined in the main program.\n",
    "    ydot = np.array([a * y[0]**b])\n",
    "    \n",
    "    return ydot\n",
    "\n",
    "def twoodes(t,y):\n",
    "    \n",
    "    # input:\n",
    "    #     t: float\n",
    "    #     y: numpy array with length = number of equations being solved\n",
    "\n",
    "    # output:\n",
    "    #     ydot: numpy array of same size as y\n",
    "    #            made of complex values because np.power(negative, fraction) returns nan, but np.power(negative, fraction, dtype = np.complex128) returns a complex value\n",
    "\n",
    "    global a, b #we are bringing a defined in the main program.\n",
    "    ydot = np.array([a*np.power(y[1],b, dtype = np.complex128), -a*np.power(y[0],b, dtype = np.complex128)]);\n",
    "    \n",
    "    return ydot"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Let's do some calculations!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Constants, Integration time, time steps and initial conditions: This information could be contained in a separate input file that you call\n",
    "\n",
    "\n",
    "#time interval for integration\n",
    "time_min = 0\n",
    "time_max = 10\n",
    "\n",
    "#define a linearly-spaced vector with n points\n",
    "n = 1000\n",
    "timespan = -np.linspace(time_min, time_max, n)\n",
    "\n",
    "#array of initial conditions defined in the function 'oneode.ipynb'\n",
    "y0 = np.array([100.])\n",
    "\n",
    "#array of initial conditions defined in the function 'twoodes.ipynb'\n",
    "yy0 = np.array([100.,100.])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "[t,y] = rk4(fxy = oneode,\n",
    "           x0 =  time_min,\n",
    "           xf = time_max,\n",
    "           y0 = y0,\n",
    "           N = n)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "[tt,yy] = rk4(fxy = twoodes,\n",
    "           x0 =  -10,\n",
    "           xf = 0,\n",
    "           y0 = yy0,\n",
    "           N = n)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mjelline/opt/anaconda3/lib/python3.9/site-packages/matplotlib/cbook/__init__.py:1298: ComplexWarning: Casting complex values to real discards the imaginary part\n",
      "  return np.asarray(x, float)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(t,y)\n",
    "plt.xlabel('Time')\n",
    "plt.ylabel('y')\n",
    "plt.title('One ODE Solution')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mjelline/opt/anaconda3/lib/python3.9/site-packages/matplotlib/cbook/__init__.py:1298: ComplexWarning: Casting complex values to real discards the imaginary part\n",
      "  return np.asarray(x, float)\n",
      "/Users/mjelline/opt/anaconda3/lib/python3.9/site-packages/matplotlib/cbook/__init__.py:1298: ComplexWarning: Casting complex values to real discards the imaginary part\n",
      "  return np.asarray(x, float)\n",
      "/Users/mjelline/opt/anaconda3/lib/python3.9/site-packages/matplotlib/cbook/__init__.py:1298: ComplexWarning: Casting complex values to real discards the imaginary part\n",
      "  return np.asarray(x, float)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(tt,yy[:,0], label = 'y1')\n",
    "plt.plot(tt,yy[:,1], label = 'y2')\n",
    "plt.plot(tt, yy[:,0] + yy[:,1], label = 'sum')\n",
    "plt.xlabel('Time')\n",
    "plt.ylabel('y')\n",
    "plt.title('Coupled ODE Solution')\n",
    "plt.legend()\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Try some experiments"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Some ideas: Vary the values for b.  Vary the values for b in each of the ODEs in the two-ode example.  Add constant ore time-vaying source terms to the ODEs. Compare results with what you got using the Euler method for vaious time steps. Add more ODEs. Follow your nose."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
